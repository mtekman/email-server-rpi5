- name: Copy over the novogene pipeline
  hosts: rpi5
  become: yes
  tasks:
  - name: Copy over the novogene pipeline
    copy:
      src: novogene/novogene-download-pipeline/
      dest: '{{ hostvars["rpi5"]["novogene_pipeline_dir"] }}/'

  - name: Install the helper script (with backup script)
    copy:
      dest: /etc/bashrc.d/emailserver.sh
      content: |

       function novogene_batches {
           ## Parse All Emails and get All Batches and Passwords
           notmuch show --format=json --include-html subject:"Data release" and body:"Password" \
           | jq '.[][][0] as $one | $one.body[0].content[0].content as $two
           | "Date=" + ($one.timestamp | strftime("%Y-%m-%d")) +
            " Body=" + (if $two | type == "array" then $two[0].content else (" " + $two) end) +
            " Id=" + $one.id' \
           | sed -r 's/<[^>]*>//g; s/&nbsp;/ /g; s/\\n/ /g; s/\s{2,}/ /g' | grep "Dear" \
           | sed -r 's|.*Date=(.*) .*Body=.*please login using BatchID\s+([^ ]*)\s+and\s+Password\s+([^ ]*) .*Id=([^ "]*).*|Date=\1\|BatchID=\2\|Password=\3\|EmailId=\4|' \
           | sort
       }

       function get_batch_data {
           local batch=$1
           if [ "$1" == "" ]; then
              echo "get_batch_data <batchnumber>" >&2 && return -1
           fi
           result=$(novogene_batches | grep $batch)
           if [ "$result" = "" ]; then
              echo "Nothing found." >&2 && return -1
           elif [[ $(echo "$result" | wc -l) -gt 1 ]]; then
              echo "Multiple matches found." >&2
              echo "$result" >&2
              return -1
           else
             echo "$result"
           fi
       }

  - name: Copy over the current samplesheet
    copy:
      src: novogene/samplesheet.org
      dest: '{{ hostvars["rpi5"]["novogene_pipeline_dir"] }}/samplesheet.org'

  - name: Install Emacs
    apt:
      name: emacs

  - name: Mount the network labdata (ro)
    become_user: root
    mount:
      src: '//{{ hostvars["labdata"]["ansible_host"] }}{{ hostvars["labdata"]["labmount"] }}'
      path: '{{ hostvars["rpi5"]["labdata_folder"] }}'
      fstype: cifs
      state: mounted
      opts: 'ro,username={{ hostvars["labdata"]["username"] }},password={{ hostvars["labdata"]["password"] }}'

  - name: Mount the archive drive (ro)
    become_user: root
    mount:
      src: 'UUID={{ hostvars["rpi5"]["novogene_drive_uuid"] }}'
      path: '{{ hostvars["rpi5"]["novogene_folder"] }}'
      fstype: ext4
      opts: ro
      state: mounted

  # - name: Generate email systemd file
  #   become_user: dietpi
  #   copy:
  #     dest: '/home/{{ ansible_user }}/.config/systemd/user/novogene.service'
  #     content: |
  #       [Unit]
  #       Description=Novogene Mailbox checker
  #       After=gmi.service
  #
  #       [Service]
  #       Type=oneshot
  #       ExecStart=bash /home/memo/EMAIL/gmail/.notmuch/hooks/novogene_run.sh FIX THIS
  #
  #       [Install]
  #       WantedBy=default.target
